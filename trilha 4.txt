1) interface Produto {
    id: number;
    nome: string;
    preco: number;
}
class ItemLoja implements Produto {
    id: number;
    nome: string;
    preco: number;

    constructor(id: number, nome: string, preco: number) {
        this.id = id;
        this.nome = nome;
        this.preco = preco;
    }
}

let item = new ItemLoja(1, "Notebook", 2500.00);
console.log(`ID: ${item.id}, Nome: ${item.nome}, Preço: R$${item.preco.toFixed(2)}`);

2) interface Documento {
    titulo: string;
    conteudo: string;
}

class Texto implements Documento {
    titulo: string;
    conteudo: string;

    constructor(titulo: string, conteudo: string) {
        this.titulo = titulo;
        this.conteudo = conteudo;
    }

    exibir(): string {
        return `Título: ${this.titulo}, Conteúdo: ${this.conteudo}`;
    }
}

let meuTexto = new Texto("Introdução ao TypeScript", "TypeScript é uma linguagem de programação que se baseia em JavaScript.");
console.log(meuTexto.exibir());

3) interface ProdutoLoja {
    codigo: number;
    nome: string;
}

class Loja {
    produtos: ProdutoLoja[];

    constructor() {
        this.produtos = [];
    }

    adicionarProduto(produto: ProdutoLoja): void {
        this.produtos.push(produto);
    }

    buscarProdutoPorCodigo(codigo: number): ProdutoLoja | undefined {
        return this.produtos.find(produto => produto.codigo === codigo);
    }
}

let minhaLoja = new Loja();

minhaLoja.adicionarProduto({ codigo: 1, nome: "Notebook" });
minhaLoja.adicionarProduto({ codigo: 2, nome: "Smartphone" });
minhaLoja.adicionarProduto({ codigo: 3, nome: "Tablet" });

let produtoEncontrado = minhaLoja.buscarProdutoPorCodigo(2);
if (produtoEncontrado) {
    console.log(`Produto encontrado: ${produtoEncontrado.nome}`);
} else {
    console.log("Produto não encontrado.");
}

4) interface Livro {
    titulo: string;
    autor: string;
    disponivel: boolean;
}

class Biblioteca {
    livros: Livro[];

    constructor() {
        this.livros = [];
    }

    adicionarLivro(livro: Livro): void {
        this.livros.push(livro);
    }

    buscarLivrosDisponiveis(): Livro[] {
        return this.livros.filter(livro => livro.disponivel);
    }
}

let minhaBiblioteca = new Biblioteca();

minhaBiblioteca.adicionarLivro({ titulo: "Dom Casmurro", autor: "Machado de Assis", disponivel: true });
minhaBiblioteca.adicionarLivro({ titulo: "Memórias Póstumas de Brás Cubas", autor: "Machado de Assis", disponivel: false });
minhaBiblioteca.adicionarLivro({ titulo: "O Alquimista", autor: "Paulo Coelho", disponivel: true });

let livrosDisponiveis = minhaBiblioteca.buscarLivrosDisponiveis();
console.log("Livros disponíveis:");
livrosDisponiveis.forEach(livro => {
    console.log(`Título: ${livro.titulo}, Autor: ${livro.autor}`);
});

5) interface LivroBiblioteca {
    titulo: string;
    autor: string;
    genero: string;
    disponivel: boolean;
}

class BibliotecaGestao {
    private livros: LivroBiblioteca[];

    constructor() {
        this.livros = [];
    }

    adicionarLivro(livro: LivroBiblioteca): void {
        this.livros.push(livro);
    }

    filtrarPorGenero(genero: string): LivroBiblioteca[] {
        return this.livros.filter(livro => livro.genero === genero);
    }

    buscarPorAutor(autor: string): LivroBiblioteca[] {
        return this.livros.filter(livro => livro.autor === autor);
    }

    obterLivrosDisponiveisOrdenados(): LivroBiblioteca[] {
        return this.livros
            .filter(livro => livro.disponivel)
            .sort((a, b) => a.titulo.localeCompare(b.titulo));
    }
}

let minhaBiblioteca = new BibliotecaGestao();

minhaBiblioteca.adicionarLivro({ titulo: "Dom Casmurro", autor: "Machado de Assis", genero: "Ficção", disponivel: true });
minhaBiblioteca.adicionarLivro({ titulo: "Memórias Póstumas de Brás Cubas", autor: "Machado de Assis", genero: "Ficção", disponivel: false });
minhaBiblioteca.adicionarLivro({ titulo: "O Alquimista", autor: "Paulo Coelho", genero: "Ficção", disponivel: true });
minhaBiblioteca.adicionarLivro({ titulo: "Harry Potter e a Pedra Filosofal", autor: "J.K. Rowling", genero: "Fantasia", disponivel: true });

let livrosFiccao = minhaBiblioteca.filtrarPorGenero("Ficção");
console.log("Livros de Ficção:");
livrosFiccao.forEach(livro => console.log(`Título: ${livro.titulo}, Autor: ${livro.autor}`));

let livrosMachado = minhaBiblioteca.buscarPorAutor("Machado de Assis");
console.log("Livros de Machado de Assis:");
livrosMachado.forEach(livro => console.log(`Título: ${livro.titulo}, Gênero: ${livro.genero}`));

let livrosDisponiveisOrdenados = minhaBiblioteca.obterLivrosDisponiveisOrdenados();
console.log("Livros disponíveis ordenados pelo título:");
livrosDisponiveisOrdenados.forEach(livro => console.log(`Título: ${livro.titulo}, Autor: ${livro.autor}`));

